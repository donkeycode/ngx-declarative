{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../src/plugin.ts"],"names":[],"mappings":";AAAA,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,4BAA8B,sBAAsB,CAAC,CAAA;AACrD,qBAAoB,QAAQ,CAAC,CAAA;AAC7B,gCAA+B,mBAAmB,CAAC,CAAA;AA6CnD;IAOE,0BAAmB,OAA4C;QAAnD,uBAAmD,GAAnD,UAA0C,EAAS;QAA5C,YAAO,GAAP,OAAO,CAAqC;QAFvD,UAAK,GAAG,IAAI,CAAC;IAE8C,CAAC;IAEpE,gCAAK,GAAL,UAAM,QAAa;QAAnB,iBAcC;QAbC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC;YAAC,MAAM,CAAC;QAE3C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,gCAAc,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,UAAC,QAAQ,EAAE,IAAI,IAAK,OAAA,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAd,CAAc,CAAE,CAAC;QAC5D,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,UAAC,QAAQ,EAAE,IAAI,IAAK,OAAA,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAd,CAAc,CAAE,CAAC;QAElE,QAAQ,CAAC,MAAM,CAAC,uBAAuB,EAAE,UAAC,GAAQ;YAChD,GAAG,CAAC,MAAM,CAAC,gBAAgB,EAAE,UAAC,MAAM,EAAE,QAAQ,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,EAApC,CAAoC,CAAE,CAAC;YAC1F,GAAG,CAAC,MAAM,CAAC,eAAe,EAAE,UAAC,MAAM,EAAE,QAAQ,IAAK,OAAA,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAnC,CAAmC,CAAE,CAAC;QAC1F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAG,GAAH,UAAI,IAA0B;QAA9B,iBAmBC;QAlBC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,CAAC;YAClE,CAAC;YACD,UAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,2BAAa,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC;iBACnE,IAAI,CAAE,cAAM,OAAA,SAAS,EAAT,CAAS,CAAE,CAAC,oDAAoD;iBAC5E,KAAK,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,EAAH,CAAG,CAAC;iBACjB,IAAI,CAAC,UAAA,GAAG;gBACP,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;oBACf,OAAO,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;gBACtE,CAAC;gBACD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,GAAG,CAAC,CAAA;YACX,CAAC,CAAC,CAAC;QAEP,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,EAAE,CAAC;QACT,CAAC;IACH,CAAC;IAED,wCAAa,GAAb,UAAc,MAAW,EAAE,QAA6C;QACtE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAChH,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;QACjD,CAAC;QACD,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACzB,CAAC;IAED,uCAAY,GAAZ,UAAa,MAAW,EAAE,QAA6C;QACrE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YACjH,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAC/F,CAAC;QACD,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACzB,CAAC;IACH,uBAAC;AAAD,CAAC,AA3DD,IA2DC;AA3DY,wBAAgB,mBA2D5B,CAAA","sourcesContent":["import * as Path from 'path';\nimport { NgcCliOptions } from '@angular/tsc-wrapped';\nimport { run } from './main';\nimport { WebpackWrapper } from \"./webpack-wrapper\";\n\nexport type PathTransformer = (path: string) => string;\nexport type OnCompilationSuccess = () => void;\nexport type OnCompilationError = (err: Error) => void;\n\nexport interface NgcWebpackPluginOptions {\n  /**\n   * If false the plugin is a ghost, it will not perform any action.\n   * This property can be used to trigger AOT on/off depending on your build target (prod, staging etc...)\n   *\n   * The state can not change after initializing the plugin.\n   * @default true\n   */\n  disabled?: boolean;\n\n  pathTransformer?: PathTransformer;\n  onCompilationSuccess?: OnCompilationSuccess;\n  onCompilationError?: OnCompilationError;\n\n  /**\n   * A path to a tsconfig file, if set the AOT compilation is triggered from the plugin.\n   * When setting a tsconfig you do not need to run the compiler from the command line.\n   *\n   * @default undefined\n   */\n  tsConfig?: string;\n\n  /**\n   * A path to a file (resource) that will replace all resource referenced in @Components.\n   * For each `@Component` the AOT compiler compiles it creates new representation for the templates (html, styles)\n   * of that `@Components`. It means that there is no need for the source templates, they take a lot of\n   * space and they will be replaced by the content of this resource.\n   *\n   * To leave the template as is set to a falsy value (the default).\n   *\n   * TIP: Use an empty file as an overriding resource. It is recommended to use a \".js\" file which\n   * usually has small amount of loaders hence less performance impact.\n   *\n   * > This feature is doing NormalModuleReplacementPlugin for AOT compiled resources.\n   * @default undefined\n   */\n  resourceOverride?: string;\n}\n\nexport class NgcWebpackPlugin {\n  public compiler: any;\n  public webpackWrapper: WebpackWrapper;\n\n  private aotPass: boolean;\n  private debug = true;\n\n  constructor(public options: NgcWebpackPluginOptions = {} as any) { }\n\n  apply(compiler: any) {\n    if (this.options.disabled === true) return;\n\n    this.compiler = compiler;\n    this.webpackWrapper = WebpackWrapper.fromCompiler(this.compiler);\n    this.aotPass = true;\n\n    compiler.plugin('run', (compiler, next) => this.run(next) );\n    compiler.plugin('watch-run', (compiler, next) => this.run(next) );\n\n    compiler.plugin(\"normal-module-factory\", (nmf: any) => {\n      nmf.plugin('before-resolve', (result, callback) => this.beforeResolve(result, callback) );\n      nmf.plugin('after-resolve', (result, callback) => this.afterResolve(result, callback) );\n    });\n  }\n\n  run(next: (err?: Error) => any): void {\n    if (this.options.tsConfig) {\n      if (this.debug) {\n        console.log('Starting compilation using the angular compiler.');\n      }\n      run(this.options.tsConfig, new NgcCliOptions({}), this.webpackWrapper)\n        .then( () => undefined ) // ensure the last then get's undefined if no error.\n        .catch(err => err)\n        .then(err => {\n          if (this.debug) {\n            console.log('Angular compilation done, starting webpack bundling.');\n          }\n          this.aotPass = false;\n          next(err)\n        });\n\n    } else {\n      next();\n    }\n  }\n\n  beforeResolve(result: any, callback: (err: Error | null, result) => void): void {\n    if (!this.aotPass && this.options.resourceOverride && this.webpackWrapper.aotResources[result.request] === true) {\n      result.request = this.options.resourceOverride;\n    }\n    callback(null, result);\n  }\n\n  afterResolve(result: any, callback: (err: Error | null, result) => void): void {\n    if (!this.aotPass && this.options.resourceOverride && this.webpackWrapper.aotResources[result.resource] === true) {\n      result.resource = Path.resolve(Path.dirname(result.resource), this.options.resourceOverride);\n    }\n    callback(null, result);\n  }\n}"]}