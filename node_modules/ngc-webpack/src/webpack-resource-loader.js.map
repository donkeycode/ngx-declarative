{"version":3,"file":"webpack-resource-loader.js","sourceRoot":"","sources":["../../src/webpack-resource-loader.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Taken from @ngtools/webpack\n * https://github.com/angular/angular-cli/blob/master/packages/%40ngtools/webpack/src/resource_loader.ts\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {readFileSync} from 'fs';\nimport * as vm from 'vm';\nimport * as path from 'path';\n\nconst NodeTemplatePlugin = require('webpack/lib/node/NodeTemplatePlugin');\nconst NodeTargetPlugin = require('webpack/lib/node/NodeTargetPlugin');\nconst LoaderTargetPlugin = require('webpack/lib/LoaderTargetPlugin');\nconst SingleEntryPlugin = require('webpack/lib/SingleEntryPlugin');\n\n\nexport class WebpackResourceLoader implements ResourceLoader {\n  private _context: string;\n  private _uniqueId = 0;\n\n  constructor(private _parentCompilation: any) {\n    this._context = _parentCompilation.context;\n  }\n\n  private _compile(filePath: string, content: string): Promise<any> {\n    const compilerName = `compiler(${this._uniqueId++})`;\n    const outputOptions = { filename: filePath };\n    const relativePath = path.relative(this._context || '', filePath);\n    const childCompiler = this._parentCompilation.createChildCompiler(relativePath, outputOptions);\n    childCompiler.context = this._context;\n    childCompiler.apply(\n      new NodeTemplatePlugin(outputOptions),\n      new NodeTargetPlugin(),\n      new SingleEntryPlugin(this._context, filePath),\n      new LoaderTargetPlugin('node')\n    );\n\n    // Store the result of the parent compilation before we start the child compilation\n    let assetsBeforeCompilation = Object.assign(\n      {},\n      this._parentCompilation.assets[outputOptions.filename]\n    );\n\n    // Fix for \"Uncaught TypeError: __webpack_require__(...) is not a function\"\n    // Hot module replacement requires that every child compiler has its own\n    // cache. @see https://github.com/ampedandwired/html-webpack-plugin/pull/179\n    childCompiler.plugin('compilation', function (compilation: any) {\n      if (compilation.cache) {\n        if (!compilation.cache[compilerName]) {\n          compilation.cache[compilerName] = {};\n        }\n        compilation.cache = compilation.cache[compilerName];\n      }\n    });\n\n    // Compile and return a promise\n    return new Promise((resolve, reject) => {\n      childCompiler.runAsChild((err: Error, entries: any[], childCompilation: any) => {\n        // Resolve / reject the promise\n        if (childCompilation && childCompilation.errors && childCompilation.errors.length) {\n          const errorDetails = childCompilation.errors.map(function (error: any) {\n            return error.message + (error.error ? ':\\n' + error.error : '');\n          }).join('\\n');\n          reject(new Error('Child compilation failed:\\n' + errorDetails));\n        } else if (err) {\n          reject(err);\n        } else {\n          // Replace [hash] placeholders in filename\n          const outputName = this._parentCompilation.mainTemplate.applyPluginsWaterfall(\n            'asset-path', outputOptions.filename, {\n              hash: childCompilation.hash,\n              chunk: entries[0]\n            });\n\n          // Restore the parent compilation to the state like it was before the child compilation.\n          this._parentCompilation.assets[outputName] = assetsBeforeCompilation[outputName];\n          if (assetsBeforeCompilation[outputName] === undefined) {\n            // If it wasn't there - delete it.\n            delete this._parentCompilation.assets[outputName];\n          }\n\n          resolve({\n            // Hash of the template entry point.\n            hash: entries[0].hash,\n            // Output name.\n            outputName: outputName,\n            // Compiled code.\n            content: childCompilation.assets[outputName].source()\n          });\n        }\n      });\n    });\n  }\n\n  private _evaluate(fileName: string, source: string): Promise<string> {\n    try {\n      const vmContext = vm.createContext(Object.assign({require: require}, global));\n      const vmScript = new vm.Script(source, {filename: fileName});\n\n      // Evaluate code and cast to string\n      let newSource: string;\n      newSource = vmScript.runInContext(vmContext);\n\n      if (typeof newSource == 'string') {\n        return Promise.resolve(newSource);\n      }\n\n      return Promise.reject('The loader \"' + fileName + '\" didn\\'t return a string.');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  get(filePath: string): Promise<string> {\n    return this._compile(filePath, readFileSync(filePath, 'utf8'))\n      .then((result: any) => this._evaluate(result.outputName, result.content));\n  }\n}\n"]}